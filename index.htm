<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BrainMaster | Interactive Quiz Game</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* CSS Variables */
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --accent-color: #4895ef;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --text-color: #333;
            --text-light: #6c757d;
            --success-color: #4bb543;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --border-radius: 12px;
            --box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
            --transition: all 0.3s ease;
        }

        /* Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: var(--light-color);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header Styles */
        header {
            background-color: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .logo i {
            font-size: 1.5rem;
        }

        /* Main Content */
        main {
            flex: 1;
            padding-top: 100px;
            padding-bottom: 50px;
        }

        /* Quiz Sections */
        .quiz-section {
            display: none;
            background-color: white;
            border-radius: var(--border-radius);
            padding: 30px;
            box-shadow: var(--box-shadow);
            margin-bottom: 30px;
        }

        .quiz-section.active {
            display: block;
        }

        .section-title {
            font-size: 1.8rem;
            margin-bottom: 20px;
            color: var(--dark-color);
            text-align: center;
        }

        /* Welcome Section */
        .welcome-text {
            text-align: center;
            margin-bottom: 30px;
            font-size: 1.1rem;
            color: var(--text-light);
        }

        .category-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .category-card {
            background-color: var(--light-color);
            border-radius: var(--border-radius);
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
            border: 2px solid transparent;
        }

        .category-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            border-color: var(--primary-color);
        }

        .category-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .category-name {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 10px;
        }

        .category-desc {
            font-size: 0.9rem;
            color: var(--text-light);
        }

        /* Quiz Settings */
        .settings-form {
            max-width: 600px;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-family: inherit;
            transition: var(--transition);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        select.form-control {
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 10px center;
            background-size: 1em;
        }

        .btn {
            display: inline-block;
            padding: 12px 30px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            font-weight: 600;
            font-size: 1rem;
        }

        .btn:hover {
            background-color: var(--secondary-color);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .btn-block {
            display: block;
            width: 100%;
        }

        /* Quiz Header */
        .quiz-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .quiz-info {
            display: flex;
            gap: 20px;
        }

        .info-item {
            display: flex;
            align-items: center;
            gap: 5px;
            font-weight: 600;
        }

        .info-item i {
            color: var(--primary-color);
        }

        .timer {
            background-color: var(--light-color);
            padding: 8px 15px;
            border-radius: 50px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .timer i {
            color: var(--danger-color);
        }

        /* Question Section */
        .question-count {
            font-size: 0.9rem;
            color: var(--text-light);
            margin-bottom: 10px;
        }

        .question-text {
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 20px;
        }

        .options-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: 15px;
            margin-bottom: 30px;
        }

        .option {
            background-color: var(--light-color);
            border: 2px solid #ddd;
            border-radius: var(--border-radius);
            padding: 15px 20px;
            cursor: pointer;
            transition: var(--transition);
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .option:hover {
            background-color: #e9ecef;
            border-color: var(--primary-color);
        }

        .option.selected {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .option.correct {
            background-color: var(--success-color);
            color: white;
            border-color: var(--success-color);
        }

        .option.incorrect {
            background-color: var(--danger-color);
            color: white;
            border-color: var(--danger-color);
        }

        .option.disabled {
            pointer-events: none;
            opacity: 0.7;
        }

        .option-prefix {
            font-weight: 600;
        }

        /* Quiz Navigation */
        .quiz-navigation {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .progress-container {
            flex: 1;
            margin-right: 20px;
        }

        .progress-bar {
            height: 10px;
            background-color: #e9ecef;
            border-radius: 5px;
            overflow: hidden;
        }

        .progress {
            height: 100%;
            background-color: var(--primary-color);
            width: 0%;
            transition: width 0.3s ease;
        }

        /* Results Section */
        .results-container {
            text-align: center;
        }

        .result-icon {
            font-size: 5rem;
            margin-bottom: 20px;
            color: var(--primary-color);
        }

        .result-title {
            font-size: 2rem;
            margin-bottom: 15px;
            color: var(--dark-color);
        }

        .result-score {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: var(--text-color);
        }

        .result-score span {
            font-weight: 700;
            color: var(--primary-color);
        }

        .result-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background-color: var(--light-color);
            border-radius: var(--border-radius);
            padding: 20px;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--text-light);
        }

        .review-btn {
            margin-bottom: 20px;
            background-color: var(--light-color);
            color: var(--text-color);
        }

        .review-btn:hover {
            background-color: #e9ecef;
        }

        /* Review Section */
        .review-item {
            background-color: var(--light-color);
            border-radius: var(--border-radius);
            padding: 20px;
            margin-bottom: 20px;
        }

        .review-question {
            font-weight: 600;
            margin-bottom: 10px;
        }

        .review-answer {
            padding: 10px 15px;
            border-radius: var(--border-radius);
            margin-top: 10px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .review-answer.correct {
            background-color: rgba(75, 181, 67, 0.1);
            border-left: 4px solid var(--success-color);
        }

        .review-answer.incorrect {
            background-color: rgba(231, 76, 60, 0.1);
            border-left: 4px solid var(--danger-color);
        }

        .review-answer i {
            font-size: 1.2rem;
        }

        .review-answer.correct i {
            color: var(--success-color);
        }

        .review-answer.incorrect i {
            color: var(--danger-color);
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            .quiz-header {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }

            .quiz-info {
                width: 100%;
                justify-content: space-between;
            }

            .timer {
                width: 100%;
                justify-content: center;
            }

            .quiz-navigation {
                flex-direction: column;
                gap: 15px;
            }

            .progress-container {
                width: 100%;
                margin-right: 0;
            }
        }

        @media (max-width: 480px) {
            .category-grid {
                grid-template-columns: 1fr;
            }

            .result-stats {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class="container">
            <nav class="navbar">
                <div class="logo">
                    <i class="fas fa-brain"></i>
                    <span>BrainMaster</span>
                </div>
            </nav>
        </div>
    </header>

    <!-- Main Content -->
    <main>
        <div class="container">
            <!-- Welcome Section -->
            <section id="welcome-section" class="quiz-section active">
                <h1 class="section-title">Welcome to BrainMaster</h1>
                <p class="welcome-text">Test your knowledge across various categories. Select a category to begin your quiz challenge!</p>
                
                <div class="category-grid">
                    <div class="category-card" data-category="general">
                        <div class="category-icon">
                            <i class="fas fa-globe"></i>
                        </div>
                        <h3 class="category-name">General Knowledge</h3>
                        <p class="category-desc">A mix of questions from various fields</p>
                    </div>
                    
                    <div class="category-card" data-category="science">
                        <div class="category-icon">
                            <i class="fas fa-flask"></i>
                        </div>
                        <h3 class="category-name">Science</h3>
                        <p class="category-desc">Biology, Chemistry, Physics and more</p>
                    </div>
                    
                    <div class="category-card" data-category="history">
                        <div class="category-icon">
                            <i class="fas fa-landmark"></i>
                        </div>
                        <h3 class="category-name">History</h3>
                        <p class="category-desc">World history and historical events</p>
                    </div>
                    
                    <div class="category-card" data-category="geography">
                        <div class="category-icon">
                            <i class="fas fa-map-marked-alt"></i>
                        </div>
                        <h3 class="category-name">Geography</h3>
                        <p class="category-desc">Countries, capitals, and landmarks</p>
                    </div>
                </div>
            </section>

            <!-- Settings Section -->
            <section id="settings-section" class="quiz-section">
                <h1 class="section-title">Quiz Settings</h1>
                
                <form class="settings-form" id="settings-form">
                    <div class="form-group">
                        <label for="quiz-category">Category</label>
                        <select id="quiz-category" class="form-control" required>
                            <option value="general">General Knowledge</option>
                            <option value="science">Science</option>
                            <option value="history">History</option>
                            <option value="geography">Geography</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="quiz-difficulty">Difficulty</label>
                        <select id="quiz-difficulty" class="form-control" required>
                            <option value="easy">Easy</option>
                            <option value="medium">Medium</option>
                            <option value="hard">Hard</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="quiz-amount">Number of Questions</label>
                        <input type="number" id="quiz-amount" class="form-control" min="5" max="20" value="10" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="quiz-timer">Time Limit (seconds per question)</label>
                        <input type="number" id="quiz-timer" class="form-control" min="10" max="120" value="30" required>
                    </div>
                    
                    <button type="submit" class="btn btn-block">Start Quiz</button>
                </form>
            </section>

            <!-- Quiz Section -->
            <section id="quiz-section" class="quiz-section">
                <div class="quiz-header">
                    <div class="quiz-info">
                        <div class="info-item">
                            <i class="fas fa-book"></i>
                            <span id="current-category">General Knowledge</span>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-bolt"></i>
                            <span id="current-difficulty">Medium</span>
                        </div>
                    </div>
                    <div class="timer">
                        <i class="fas fa-clock"></i>
                        <span id="time">30</span>
                    </div>
                </div>
                
                <div class="question-count">
                    Question <span id="current-question">1</span> of <span id="total-questions">10</span>
                </div>
                
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress" id="progress-bar"></div>
                    </div>
                </div>
                
                <div class="question-text" id="question-text">
                    Loading question...
                </div>
                
                <div class="options-container" id="options-container">
                    <!-- Options will be inserted here by JavaScript -->
                </div>
                
                <div class="quiz-navigation">
                    <div class="progress-container">
                        <div class="progress-bar">
                            <div class="progress" id="progress-bar"></div>
                        </div>
                    </div>
                    <button class="btn" id="next-btn">Next Question</button>
                </div>
            </section>

            <!-- Results Section -->
            <section id="results-section" class="quiz-section">
                <div class="results-container">
                    <div class="result-icon">
                        <i class="fas fa-trophy"></i>
                    </div>
                    <h1 class="result-title">Quiz Completed!</h1>
                    <div class="result-score">
                        You scored <span id="final-score">0</span> out of <span id="max-score">10</span>
                    </div>
                    
                    <div class="result-stats">
                        <div class="stat-card">
                            <div class="stat-value" id="correct-answers">0</div>
                            <div class="stat-label">Correct Answers</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value" id="wrong-answers">0</div>
                            <div class="stat-label">Wrong Answers</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value" id="skipped-questions">0</div>
                            <div class="stat-label">Skipped Questions</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value" id="percentage">0%</div>
                            <div class="stat-label">Percentage</div>
                        </div>
                    </div>
                    
                    <button class="btn review-btn" id="review-btn">
                        <i class="fas fa-search"></i> Review Answers
                    </button>
                    <button class="btn" id="restart-btn">
                        <i class="fas fa-redo"></i> Take Another Quiz
                    </button>
                </div>
                
                <div id="review-container" style="display: none;">
                    <h2 style="margin: 30px 0 20px; text-align: center;">Answer Review</h2>
                    <div id="review-questions">
                        <!-- Review questions will be inserted here by JavaScript -->
                    </div>
                    <button class="btn btn-block" id="back-to-results">
                        <i class="fas fa-arrow-left"></i> Back to Results
                    </button>
                </div>
            </section>
        </div>
    </main>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="copyright">&copy; 2023 BrainMaster Quiz Game. All rights reserved.</div>
            </div>
        </div>
    </footer>

    <!-- JavaScript -->
    <script>
        // DOM Elements
        const welcomeSection = document.getElementById('welcome-section');
        const settingsSection = document.getElementById('settings-section');
        const quizSection = document.getElementById('quiz-section');
        const resultsSection = document.getElementById('results-section');
        const categoryCards = document.querySelectorAll('.category-card');
        const settingsForm = document.getElementById('settings-form');
        const quizCategory = document.getElementById('quiz-category');
        const quizDifficulty = document.getElementById('quiz-difficulty');
        const quizAmount = document.getElementById('quiz-amount');
        const quizTimer = document.getElementById('quiz-timer');
        const currentCategory = document.getElementById('current-category');
        const currentDifficulty = document.getElementById('current-difficulty');
        const timeElement = document.getElementById('time');
        const currentQuestionElement = document.getElementById('current-question');
        const totalQuestionsElement = document.getElementById('total-questions');
        const questionText = document.getElementById('question-text');
        const optionsContainer = document.getElementById('options-container');
        const nextButton = document.getElementById('next-btn');
        const progressBar = document.getElementById('progress-bar');
        const finalScore = document.getElementById('final-score');
        const maxScore = document.getElementById('max-score');
        const correctAnswers = document.getElementById('correct-answers');
        const wrongAnswers = document.getElementById('wrong-answers');
        const skippedQuestions = document.getElementById('skipped-questions');
        const percentage = document.getElementById('percentage');
        const reviewButton = document.getElementById('review-btn');
        const restartButton = document.getElementById('restart-btn');
        const reviewContainer = document.getElementById('review-container');
        const reviewQuestions = document.getElementById('review-questions');
        const backToResults = document.getElementById('back-to-results');

        // Quiz Variables
        let currentCategoryValue = '';
        let currentDifficultyValue = '';
        let questions = [];
        let currentQuestionIndex = 0;
        let score = 0;
        let timer;
        let timeLeft = 0;
        let quizTimePerQuestion = 0;
        let userAnswers = [];
        let quizStarted = false;

        // Category Mapping
        const categoryMap = {
            'general': 'General Knowledge',
            'science': 'Science',
            'history': 'History',
            'geography': 'Geography'
        };

        // Difficulty Mapping
        const difficultyMap = {
            'easy': 'Easy',
            'medium': 'Medium',
            'hard': 'Hard'
        };

        // Event Listeners
        categoryCards.forEach(card => {
            card.addEventListener('click', () => {
                currentCategoryValue = card.getAttribute('data-category');
                quizCategory.value = currentCategoryValue;
                showSection(settingsSection);
            });
        });

        settingsForm.addEventListener('submit', (e) => {
            e.preventDefault();
            startQuiz();
        });

        nextButton.addEventListener('click', () => {
            if (!quizStarted) return;
            
            // If no answer selected, mark as skipped
            if (userAnswers[currentQuestionIndex] === undefined) {
                userAnswers[currentQuestionIndex] = {
                    skipped: true,
                    question: questions[currentQuestionIndex].question,
                    correctAnswer: questions[currentQuestionIndex].correct_answer,
                    userAnswer: null
                };
            }
            
            moveToNextQuestion();
        });

        reviewButton.addEventListener('click', () => {
            document.querySelector('.results-container').style.display = 'none';
            reviewContainer.style.display = 'block';
            displayReviewQuestions();
        });

        backToResults.addEventListener('click', () => {
            document.querySelector('.results-container').style.display = 'block';
            reviewContainer.style.display = 'none';
        });

        restartButton.addEventListener('click', () => {
            showSection(welcomeSection);
            resetQuiz();
        });

        // Functions
        function showSection(section) {
            document.querySelectorAll('.quiz-section').forEach(sec => {
                sec.classList.remove('active');
            });
            section.classList.add('active');
        }

        function startQuiz() {
            // Get settings from form
            currentCategoryValue = quizCategory.value;
            currentDifficultyValue = quizDifficulty.value;
            const amount = quizAmount.value;
            quizTimePerQuestion = quizTimer.value;
            
            // Update UI
            currentCategory.textContent = categoryMap[currentCategoryValue];
            currentDifficulty.textContent = difficultyMap[currentDifficultyValue];
            totalQuestionsElement.textContent = amount;
            
            // Load questions (in a real app, you would fetch these from an API)
            loadQuestions(currentCategoryValue, currentDifficultyValue, amount);
            
            // Show quiz section
            showSection(quizSection);
        }

        function loadQuestions(category, difficulty, amount) {
            // In a real application, you would fetch questions from an API like:
            // fetch(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`)
            
            // For this demo, we'll use sample questions
            questions = getSampleQuestions(category, difficulty, amount);
            quizStarted = true;
            userAnswers = [];
            currentQuestionIndex = 0;
            score = 0;
            
            displayQuestion();
            startTimer();
        }

        function displayQuestion() {
            if (currentQuestionIndex >= questions.length) {
                endQuiz();
                return;
            }
            
            const question = questions[currentQuestionIndex];
            
            // Update UI
            currentQuestionElement.textContent = currentQuestionIndex + 1;
            questionText.textContent = decodeHtmlEntities(question.question);
            
            // Update progress bar
            progressBar.style.width = `${((currentQuestionIndex) / questions.length) * 100}%`;
            
            // Display options
            optionsContainer.innerHTML = '';
            
            // Combine correct and incorrect answers and shuffle them
            const options = [...question.incorrect_answers, question.correct_answer];
            shuffleArray(options);
            
            options.forEach((option, index) => {
                const optionElement = document.createElement('div');
                optionElement.classList.add('option');
                optionElement.innerHTML = `
                    <span class="option-prefix">${String.fromCharCode(65 + index)}</span>
                    <span class="option-text">${decodeHtmlEntities(option)}</span>
                `;
                
                optionElement.addEventListener('click', () => selectAnswer(option, question.correct_answer));
                
                // If user already answered this question, show their selection
                if (userAnswers[currentQuestionIndex] && !userAnswers[currentQuestionIndex].skipped) {
                    if (option === userAnswers[currentQuestionIndex].userAnswer) {
                        optionElement.classList.add('selected');
                    }
                    if (option === question.correct_answer) {
                        optionElement.classList.add('correct');
                    }
                    if (option === userAnswers[currentQuestionIndex].userAnswer && 
                        userAnswers[currentQuestionIndex].userAnswer !== question.correct_answer) {
                        optionElement.classList.add('incorrect');
                    }
                    optionElement.classList.add('disabled');
                }
                
                optionsContainer.appendChild(optionElement);
            });
            
            // Reset timer
            resetTimer();
        }

        function selectAnswer(selectedOption, correctAnswer) {
            // Disable all options
            document.querySelectorAll('.option').forEach(option => {
                option.classList.add('disabled');
                
                // Mark correct answer
                if (option.querySelector('.option-text').textContent === decodeHtmlEntities(correctAnswer)) {
                    option.classList.add('correct');
                }
            });
            
            // Mark selected option
            const selectedOptionElement = Array.from(document.querySelectorAll('.option')).find(
                option => option.querySelector('.option-text').textContent === decodeHtmlEntities(selectedOption)
            );
            
            if (selectedOptionElement) {
                selectedOptionElement.classList.add('selected');
                
                // Check if answer is correct
                const isCorrect = selectedOption === correctAnswer;
                if (isCorrect) {
                    score++;
                }
                
                // Mark incorrect if wrong
                if (!isCorrect) {
                    selectedOptionElement.classList.add('incorrect');
                }
            }
            
            // Store user answer
            userAnswers[currentQuestionIndex] = {
                skipped: false,
                question: questions[currentQuestionIndex].question,
                correctAnswer: correctAnswer,
                userAnswer: selectedOption,
                isCorrect: selectedOption === correctAnswer
            };
            
            // Stop timer for this question
            clearInterval(timer);
        }

        function moveToNextQuestion() {
            currentQuestionIndex++;
            
            if (currentQuestionIndex < questions.length) {
                displayQuestion();
            } else {
                endQuiz();
            }
        }

        function startTimer() {
            timeLeft = quizTimePerQuestion;
            updateTimerDisplay();
            
            timer = setInterval(() => {
                timeLeft--;
                updateTimerDisplay();
                
                if (timeLeft <= 0) {
                    clearInterval(timer);
                    
                    // If time runs out and no answer selected, mark as skipped
                    if (userAnswers[currentQuestionIndex] === undefined) {
                        userAnswers[currentQuestionIndex] = {
                            skipped: true,
                            question: questions[currentQuestionIndex].question,
                            correctAnswer: questions[currentQuestionIndex].correct_answer,
                            userAnswer: null
                        };
                    }
                    
                    moveToNextQuestion();
                }
            }, 1000);
        }

        function resetTimer() {
            clearInterval(timer);
            timeLeft = quizTimePerQuestion;
            updateTimerDisplay();
            startTimer();
        }

        function updateTimerDisplay() {
            timeElement.textContent = timeLeft;
            
            // Change color when time is running low
            if (timeLeft <= 10) {
                timeElement.style.color = 'var(--danger-color)';
            } else {
                timeElement.style.color = 'inherit';
            }
        }

        function endQuiz() {
            clearInterval(timer);
            quizStarted = false;
            
            // Calculate results
            const totalQuestions = questions.length;
            const correct = score;
            const wrong = userAnswers.filter(answer => !answer.skipped && !answer.isCorrect).length;
            const skipped = userAnswers.filter(answer => answer.skipped).length;
            const percent = Math.round((correct / totalQuestions) * 100);
            
            // Display results
            finalScore.textContent = correct;
            maxScore.textContent = totalQuestions;
            correctAnswers.textContent = correct;
            wrongAnswers.textContent = wrong;
            skippedQuestions.textContent = skipped;
            percentage.textContent = `${percent}%`;
            
            // Show results section
            showSection(resultsSection);
        }

        function displayReviewQuestions() {
            reviewQuestions.innerHTML = '';
            
            userAnswers.forEach((answer, index) => {
                const reviewItem = document.createElement('div');
                reviewItem.className = 'review-item';
                
                reviewItem.innerHTML = `
                    <div class="review-question">Q${index + 1}: ${decodeHtmlEntities(answer.question)}</div>
                `;
                
                if (answer.skipped) {
                    reviewItem.innerHTML += `
                        <div class="review-answer">
                            <i class="fas fa-forward"></i>
                            <span>You skipped this question</span>
                        </div>
                        <div class="review-answer correct">
                            <i class="fas fa-check"></i>
                            <span>Correct answer: ${decodeHtmlEntities(answer.correctAnswer)}</span>
                        </div>
                    `;
                } else {
                    const isCorrect = answer.userAnswer === answer.correctAnswer;
                    const answerClass = isCorrect ? 'correct' : 'incorrect';
                    const answerIcon = isCorrect ? 'fa-check' : 'fa-times';
                    
                    reviewItem.innerHTML += `
                        <div class="review-answer ${answerClass}">
                            <i class="fas ${answerIcon}"></i>
                            <span>Your answer: ${decodeHtmlEntities(answer.userAnswer)}</span>
                        </div>
                        ${!isCorrect ? `
                        <div class="review-answer correct">
                            <i class="fas fa-check"></i>
                            <span>Correct answer: ${decodeHtmlEntities(answer.correctAnswer)}</span>
                        </div>
                        ` : ''}
                    `;
                }
                
                reviewQuestions.appendChild(reviewItem);
            });
        }

        function resetQuiz() {
            questions = [];
            currentQuestionIndex = 0;
            score = 0;
            userAnswers = [];
            quizStarted = false;
            clearInterval(timer);
        }

        // Helper Functions
        function decodeHtmlEntities(text) {
            const textArea = document.createElement('textarea');
            textArea.innerHTML = text;
            return textArea.value;
        }

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        // Sample Questions - In a real app, you would fetch these from an API
        function getSampleQuestions(category, difficulty, amount) {
            // This is a simplified version with sample questions
            // In production, you would use the OpenTDB API or similar
            
            const sampleQuestions = {
                'general': [
                    {
                        question: "What is the capital of France?",
                        correct_answer: "Paris",
                        incorrect_answers: ["London", "Berlin", "Madrid"]
                    },
                    {
                        question: "Which planet is known as the Red Planet?",
                        correct_answer: "Mars",
                        incorrect_answers: ["Venus", "Jupiter", "Saturn"]
                    },
                    {
                        question: "What is the largest mammal in the world?",
                        correct_answer: "Blue whale",
                        incorrect_answers: ["Elephant", "Giraffe", "Polar bear"]
                    }
                ],
                'science': [
                    {
                        question: "What is the chemical symbol for water?",
                        correct_answer: "H₂O",
                        incorrect_answers: ["CO₂", "NaCl", "O₂"]
                    },
                    {
                        question: "What is the hardest natural substance on Earth?",
                        correct_answer: "Diamond",
                        incorrect_answers: ["Gold", "Iron", "Quartz"]
                    }
                ],
                'history': [
                    {
                        question: "In which year did World War II end?",
                        correct_answer: "1945",
                        incorrect_answers: ["1939", "1941", "1950"]
                    }
                ],
                'geography': [
                    {
                        question: "Which country has the most natural lakes?",
                        correct_answer: "Canada",
                        incorrect_answers: ["USA", "Russia", "China"]
                    }
                ]
            };
            
            // Get questions for the selected category
            let categoryQuestions = sampleQuestions[category] || sampleQuestions['general'];
            
            // Repeat questions if we don't have enough (for demo purposes)
            while (categoryQuestions.length < amount) {
                categoryQuestions = categoryQuestions.concat(categoryQuestions);
            }
            
            // Return the requested amount
            return categoryQuestions.slice(0, amount);
        }
    </script>
</body>
</html>